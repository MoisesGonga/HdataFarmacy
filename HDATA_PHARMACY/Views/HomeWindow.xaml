<Window xmlns:Financa="clr-namespace:HDATA_PHARMACY.Views.Financa" 
      
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HDATA_PHARMACY.Views"
        
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"   
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:Produto="clr-namespace:HDATA_PHARMACY.Views.Produto" x:Class="HDATA_PHARMACY.Views.HomeWindow"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        mc:Ignorable="d"
        
     TextElement.FontFamily="{DynamicResource PoppinsRegular}"      
     TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     FontFamily="Poppins"
     fw:AcrylicWindow.Enabled="True" Title="Home" Background="{DynamicResource HomeBackground}" Height="597" Width="839" KeyDown="Window_KeyDown">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TreeViewItem}">

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeView}}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselected"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                    <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                    <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <materialDesign:ScaleHost x:Name="ScaleHost"/>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding Foreground}"/>
                                <ToggleButton x:Name="Expander" ClickMode="Press" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,0" VerticalAlignment="Center">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="Width" Value="16"/>
                                            <Setter Property="Height" Value="16"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Background="Transparent" Height="16" Width="16">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualStateGroup.Transitions>
                                                                        <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualTransition>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualTransition>
                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualTransition>
                                                                        <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualTransition>
                                                                    </VisualStateGroup.Transitions>
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Viewbox>
                                                                <Canvas Height="24" Width="24">
                                                                    <Path x:Name="ExpandPath" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}">
                                                                        <Path.RenderTransform>
                                                                            <TransformGroup>
                                                                                <ScaleTransform/>
                                                                                <SkewTransform/>
                                                                                <RotateTransform Angle="0" CenterY="4" CenterX="4"/>
                                                                                <TranslateTransform/>
                                                                            </TransformGroup>
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Canvas>
                                                            </Viewbox>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="MouseOverBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                    <Border.Background>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="SelectedBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                    <Border.Background>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </Border.Background>
                                </Border>
                                <Grid x:Name="ContentGrid" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="1">
                                    <materialDesign:Ripple Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <materialDesign:Ripple.Feedback>
                                            <TemplateBinding Property="Foreground">
                                                <TemplateBinding.Converter>
                                                    <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </materialDesign:Ripple.Feedback>
                                        <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header"/>
                                    </materialDesign:Ripple>
                                </Grid>
                                <ContentControl x:Name="AdditionalContentControl" Grid.ColumnSpan="2" ContentTemplate="{Binding (materialDesign:TreeViewAssist.AdditionalTemplate), RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Header}" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                                <StackPanel x:Name="ItemsPanel" Grid.ColumnSpan="2" Grid.Column="1" Margin="-16,0,0,0" Grid.Row="2">
                                    <StackPanel.Height>
                                        <MultiBinding UpdateSourceTrigger="Default">
                                            <MultiBinding.Converter>
                                                <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                            </MultiBinding.Converter>
                                            <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                            <Binding ElementName="ScaleHost" Path="Scale"/>
                                        </MultiBinding>
                                    </StackPanel.Height>
                                    <ItemsPresenter x:Name="ItemsHost" Opacity="0" Visibility="Collapsed" VerticalAlignment="Top"/>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="Visible">
                                    <DataTrigger.Binding>
                                        <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplate)" RelativeSource="{RelativeSource Self}">
                                            <Binding.Converter>
                                                <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                            </Binding.Converter>
                                        </Binding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="Visible">
                                    <DataTrigger.Binding>
                                        <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplateSelector)" RelativeSource="{RelativeSource Self}">
                                            <Binding.Converter>
                                                <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                            </Binding.Converter>
                                        </Binding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                </DataTrigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.56"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition  Name="grid_colum0" Width="260"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Expander x:Name="utilizadorExpander" Grid.Column="1" Background="{DynamicResource MaterialDesignBackground}"  FlowDirection="RightToLeft" Header="{x:Null}" Height="145"  HorizontalAlignment="Right" VerticalAlignment="Top" Width="{Binding Width, ElementName=btn_perfil}" FontFamily="Poppins" Grid.RowSpan="2">
            <StackPanel>
                <Button  Margin="0 8 0 0" Cursor="Hand" BorderThickness="0" HorizontalAlignment="Center" Style="{DynamicResource Button_MenuStyle}" Background="White" Height="40" FontFamily="Poppins">
                    <Grid Width="{Binding Width, ElementName=btn_perfil}" Height="40">
                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="141"/>
                            <ColumnDefinition Width="45"/>
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon  Grid.Column="1" Foreground="#FFF39C10"  HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" Width="35" Kind="Lock" Margin="5" FontFamily="Poppins" />
                        <Label Content="Bloquear" HorizontalAlignment="Right"  Foreground="#FF1E1E1E" Height="30" Margin="10,5,10,0" />
                    </Grid>
                </Button>
                <Separator Foreground="#EBEBF2" Width="160" FontFamily="Poppins" Background="#FFEBEBF2"/>
                <Button Cursor="Hand" BorderThickness="0" HorizontalAlignment="Center" Style="{DynamicResource Button_MenuStyle}" Background="White" Height="40">
                    <Grid Width="{Binding Width, ElementName=btn_perfil}" Height="40">
                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="141"/>
                            <ColumnDefinition Width="45"/>
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon  Grid.Column="1" Foreground="#F93E3E"  HorizontalAlignment="Left" Height="30" VerticalAlignment="Center" Width="35" Kind="Shutdown" Margin="5" />
                        <Label Content="Encerrar" HorizontalAlignment="Right"  Foreground="#FF1E1E1E" Height="30" Margin="10,5,10,0" FontFamily="Poppins" />
                    </Grid>
                </Button>
            </StackPanel>
        </Expander>
        <Border materialDesign:ShadowAssist.ShadowDepth="Depth3" materialDesign:ShadowAssist.ShadowEdges="Bottom,Left" Background="White" Grid.Column="1">
            <Grid>
                <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth1" materialDesign:ShadowAssist.ShadowEdges="Bottom,Left"  Padding="32" FontFamily="Poppins"/>
                <Button x:Name="btn_show_hide_menu" Margin="5 0 0 0" Style="{DynamicResource ButtonStyleMaterialDesign}" HorizontalAlignment="Left" Background="{x:Null}" VerticalAlignment="Center" Padding="0" FontFamily="Poppins" BorderBrush="{x:Null}" Click="btn_show_hide_menu_Click">
                    <materialDesign:PackIcon HorizontalAlignment="Center" HorizontalContentAlignment="Center" Width="50" Height="Auto"  Foreground="#FF1EBBB3" Kind="Menu" FontFamily="Poppins" />
                </Button>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button ToolTip="Ajuda" Margin="5 0 0 0" Style="{DynamicResource ButtonStyleMaterialDesign}" HorizontalAlignment="Left" Background="{x:Null}" VerticalAlignment="Center" Padding="0" FontFamily="Poppins" BorderBrush="{x:Null}">
                        <materialDesign:PackIcon HorizontalAlignment="Center" HorizontalContentAlignment="Center" Width="50" Height="Auto"  Foreground="{StaticResource RedColor}" Kind="Support" FontFamily="Poppins" />
                    </Button>
                    <Button ToolTip="Notificação" Margin="5 0 0 0" Style="{DynamicResource ButtonStyleMaterialDesign}" HorizontalAlignment="Left" Background="{x:Null}" VerticalAlignment="Center" Padding="0" FontFamily="Poppins" BorderBrush="{x:Null}">
                        <materialDesign:PackIcon HorizontalAlignment="Center" HorizontalContentAlignment="Center" Width="50" Height="Auto"  Foreground="{StaticResource BlueColor}" Kind="Bell" FontFamily="Poppins" />
                    </Button>
                    <Separator FontFamily="Poppins" Background="#EBEBF2" HorizontalAlignment="Center" VerticalAlignment="Center" Width="35" RenderTransformOrigin="0.5,0.5" >
                        <Separator.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="90"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Separator.RenderTransform>
                    </Separator>
                    <Button  Margin="0 0 0 0" Cursor="Hand" Padding="0" x:Name="btn_perfil"  Style="{DynamicResource ButtonStyleMaterialDesign}"  Grid.Column="1" Height="50" Foreground="White" Background="{x:Null}" FontFamily="Poppins" Width="186" Click="btn_perfil_Click">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                            <materialDesign:PackIcon   HorizontalAlignment="Left" Height="32" VerticalAlignment="Center" Width="43" Kind="Account" Foreground="#FF4D4F5C" />
                            <Label x:Name="lbl_user" Margin="10,10" FontWeight="Medium" FontFamily="Poppins" FontSize="18" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="Amaro Buta" HorizontalAlignment="Left"  Foreground="#FF4D4F5C" Height="32"/>
                        </StackPanel>
                    </Button>

                    <Expander Visibility="Collapsed" x:Name="PerfilExpander" FlowDirection="RightToLeft"  HorizontalAlignment="Right" Width="276" FontFamily="Poppins">
                        <Expander.Header>
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                                <Label FontWeight="Medium" FontFamily="Poppins" FontSize="18" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="Amaro Buta" HorizontalAlignment="Left"  Foreground="#FF4D4F5C" Height="34" />
                                <materialDesign:PackIcon   HorizontalAlignment="Left" Height="32" VerticalAlignment="Center" Width="43" Kind="Account" Foreground="#FF4D4F5C" />
                            </StackPanel>
                        </Expander.Header>
                        <StackPanel>
                            <Button Background="Red">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Cart" FontFamily="FontAwesome" />
                                    <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White"><Run Text="Facturação"/></TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Expander>
                </StackPanel>

            </Grid>

        </Border>
        <Border Background="{StaticResource solidPrimaryGreenColor}" Grid.Column="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="175"/>
                </Grid.ColumnDefinitions>
                <Image Margin="5 0 0 0" x:Name="image" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/HDATA_PHARMACY;component/Images/logo-hdata-farmacy2.png"/>
                <Label Content="Hdata Farmacy" Grid.Column="1" FontSize="20" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontFamily="Google Sans" Grid.ColumnSpan="2"/>
            </Grid>
        </Border>
        <Border Background="{StaticResource PrimaryGreenColor}" Grid.Column="0" Grid.Row="1">
            <StackPanel Orientation="Vertical">
                <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth1" materialDesign:ShadowAssist.ShadowEdges="Top" Grid.Row="1" Background="{DynamicResource PrimaryGreenColor}"
                             Margin="0 0 0 0" FontFamily="Poppins">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="#FF4F4F4F"/>
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="FontWeight" Value="Regular"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="FontFamily" Value="{StaticResource PoppinsRegular}"/>
                            </Style>

                        </StackPanel.Resources>

                        <TreeView Grid.Row="1" FontFamily="Poppins">
                            <TreeViewItem  BorderThickness="4 0 0 0 " Foreground="White" FontFamily="Poppins" mah:ItemHelper.HoverSelectedBackgroundBrush="{DynamicResource SecondGreenColor}" FontSize="{DynamicResource FontSizeMenu}">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Home" FontFamily="Poppins" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White"><Run Text="Home"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>

                            </TreeViewItem>
                            <TreeViewItem  BorderThickness="4 0 0 0 " Foreground="White" FontFamily="Poppins" FontSize="{DynamicResource FontSizeMenu}">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Cart" FontFamily="FontAwesome" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White"><Run Text="Facturação"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                                <TreeViewItem Header="Consulta" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}"/>
                                <TreeViewItem Header="Caixa" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}"/>
                                <TreeViewItem Header="Vendas" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}"/>
                                <TreeViewItem  Header="Promoção" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}"/>
                            </TreeViewItem>
                            <TreeViewItem  BorderThickness="4 0 0 0 " Foreground="White" FontSize="{DynamicResource FontSizeMenu}">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Finance" FontFamily="FontAwesome" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White"><Run Text="Finança"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                                <TreeViewItem Header="Despesa" Foreground="#DDFFFFFF" FontFamily="Poppins" FontSize="{DynamicResource FontSizeSubMenu}"/>
                                <TreeViewItem Name="ReceitaSubMenu" MouseDoubleClick="ReceitaSubMenu_MouseDoubleClick" Header="Receita" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}"/>
                                <TreeViewItem Header="Conta Corrente" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}" FontFamily="Poppins"/>
                                <TreeViewItem Header="Promoção" Foreground="#DDFFFFFF" FontSize="{DynamicResource FontSizeSubMenu}"/>
                            </TreeViewItem>
                            <TreeViewItem x:Name="Trv_Cliente" MouseDoubleClick="Trv_Cliente_MouseDoubleClick"  BorderThickness="4 0 0 0 " Foreground="White" FontFamily="Poppins" FontSize="{DynamicResource FontSizeMenu}">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Users" FontFamily="Poppins" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White" FontSize="{DynamicResource FontSizeMenu}"><Run FontSize="{DynamicResource FontSizeMenu}" Text="Cliente" FontFamily="Poppins"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <TreeViewItem x:Name="Trv_Produto" MouseDoubleClick="Trv_Produto_MouseDoubleClick"  BorderThickness="4 0 0 0 " Foreground="White" FontSize="{DynamicResource FontSizeMenu}" FontFamily="Poppins">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Archive" FontFamily="Poppins" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White"><Run FontSize="{DynamicResource FontSizeMenu}" Text="Produto" FontFamily="Poppins"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <TreeViewItem  BorderThickness="4 0 0 0 " Foreground="White"  FontFamily="Poppins" FontSize="{DynamicResource FontSizeMenu}" >
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Stocking" FontFamily="Poppins" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White"><Run Text="Stock"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                                <TreeViewItem Header="Lote" Foreground="White" FontSize="{DynamicResource FontSizeSubMenu}" MouseDoubleClick="Trv_Lote_MouseDoubleClick" />

                                <TreeViewItem Header="Movimentação Stock" Foreground="White" FontSize="{DynamicResource FontSizeSubMenu}" MouseDoubleClick="TreeViewItem_MouseDoubleClick" />
                                <TreeViewItem Header="Inventário" Foreground="White" FontSize="{DynamicResource FontSizeSubMenu}"/>
                                 </TreeViewItem>
                            <TreeViewItem  BorderThickness="4 0 0 0 " Foreground="White" FontFamily="Poppins" FontSize="{DynamicResource FontSizeMenu}">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Printer" FontFamily="Poppins" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White" FontSize="{DynamicResource FontSizeMenu}"><Run FontSize="{DynamicResource FontSizeMenu}" Text="Relatório" FontFamily="Poppins"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <TreeViewItem  BorderThickness="4 0 0 0 " Foreground="White" FontFamily="Poppins" FontSize="{DynamicResource FontSizeMenu}">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="White"  HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Width="Auto" Kind="Settings" FontFamily="Poppins" />
                                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" FontFamily="Poppins" Foreground="White" FontSize="{DynamicResource FontSizeMenu}"><Run FontSize="{DynamicResource FontSizeMenu}" Text="Configurações" FontFamily="Poppins"/></TextBlock>
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                        </TreeView>
                    </StackPanel>
                </materialDesign:Card>
            </StackPanel>
        </Border>
        <dragablz:TabablzControl Name="mainTabControl" Grid.Column="1" Grid.Row="1" Background="White" ShowDefaultCloseButton="True">
            <dragablz:TabablzControl.InterTabController>
                <dragablz:InterTabController />
            </dragablz:TabablzControl.InterTabController>
            <TabItem Header="Home">
                
            </TabItem>
            
        </dragablz:TabablzControl>
    </Grid>
</Window>
