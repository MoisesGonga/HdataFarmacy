<UserControl
    x:Class="HDATA_PHARMACY.Views.Facturacao.Venda_UC"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
    xmlns:local="clr-namespace:HDATA_PHARMACY.Views.Facturacao"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:converter="clr-namespace:HDATA_PHARMACY.Converter"
    mc:Ignorable="d"
    Background="{DynamicResource HomeBackground}"
    FontFamily="Poppins"
    TextElement.FontFamily="{DynamicResource PoppinsRegular}"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:DinheiroFormatConverter x:Key="dinheiroConverter" />
            <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style x:Key="DecimalUpDownStyle1" TargetType="{x:Type xctk:DecimalUpDown}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="TextAlignment" Value="Right" />
                <Setter Property="WatermarkTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl
                            Margin="0,0,3,0"
                            Content="{Binding}"
                            Focusable="False"
                            Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xctk:DecimalUpDown}">
                            <xctk:ButtonSpinner
                            x:Name="PART_Spinner"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                            IsTabStop="False"
                            ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{DynamicResource ButtonSpinnerStyle1}">
                                <xctk:WatermarkTextBox
                                x:Name="PART_TextBox"
                                MinWidth="20"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AcceptsReturn="False"
                                AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                Background="Transparent"
                                BorderThickness="0"
                                ContextMenu="{TemplateBinding ContextMenu}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="True"
                                IsUndoEnabled="True"
                                MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}"
                                Padding="{TemplateBinding Padding}"
                                TabIndex="{TemplateBinding TabIndex}"
                                TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                TextWrapping="NoWrap"
                                Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                            </xctk:ButtonSpinner>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="False" Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" />
                                        <Condition Value="False" Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                                </MultiDataTrigger>
                                <DataTrigger Value="True" Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}">
                                    <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                                </DataTrigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonSpinnerStyle1" TargetType="{x:Type xctk:ButtonSpinner}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                            <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="firstContentColumn" Width="*" />
                                        <ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    Focusable="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Grid
                                    x:Name="gridContent"
                                    Grid.Column="1"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.Visibility>
                                            <TemplateBinding Property="ShowButtonSpinner">
                                                <TemplateBinding.Converter>
                                                    <BooleanToVisibilityConverter />
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </Grid.Visibility>
                                        <RepeatButton
                                        x:Name="PART_IncreaseButton"
                                        Background="{StaticResource DefaultBackground}"
                                        BorderThickness="0"
                                        IsTabStop="{TemplateBinding IsTabStop}"
                                        Style="{DynamicResource {ComponentResourceKey ResourceId=SpinnerButtonStyleKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}">
                                            <RepeatButton.ContentTemplate>
                                                <DataTemplate>
                                                    <materialDesign:PackIcon
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Focusable="False"
                                                    Foreground="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                    Kind="ChevronUp"
                                                    SnapsToDevicePixels="True" />
                                                </DataTemplate>
                                            </RepeatButton.ContentTemplate>
                                        </RepeatButton>
                                        <RepeatButton
                                        x:Name="PART_DecreaseButton"
                                        Grid.Row="1"
                                        Background="{StaticResource DefaultBackground}"
                                        IsTabStop="{TemplateBinding IsTabStop}"
                                        Style="{DynamicResource {ComponentResourceKey ResourceId=SpinnerButtonStyleKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}">
                                            <RepeatButton.ContentTemplate>
                                                <DataTemplate>
                                                    <materialDesign:PackIcon
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Focusable="False"
                                                    Foreground="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                    Kind="ChevronDown"
                                                    SnapsToDevicePixels="True" />
                                                </DataTemplate>
                                            </RepeatButton.ContentTemplate>
                                        </RepeatButton>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlDisabledBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False" SourceName="PART_IncreaseButton">
                                    <Setter TargetName="PART_IncreaseButton" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <materialDesign:PackIcon
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Focusable="False"
                                                Foreground="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                Kind="ChevronUp"
                                                SnapsToDevicePixels="True" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False" SourceName="PART_DecreaseButton">
                                    <Setter TargetName="PART_DecreaseButton" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <materialDesign:PackIcon
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Focusable="False"
                                                Foreground="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                Kind="ChevronDown"
                                                SnapsToDevicePixels="True" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="ButtonSpinnerLocation" Value="Left">
                                    <Setter TargetName="firstContentColumn" Property="Width" Value="Auto" />
                                    <Setter TargetName="secondContentColumn" Property="Width" Value="*" />
                                    <Setter TargetName="contentPresenter" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="gridContent" Property="Grid.Column" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="80" />
            <RowDefinition Height="50" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Border
            Grid.ColumnSpan="2"
            Background="{StaticResource PrimaryGreenColor}"
            BorderBrush="Black"
            BorderThickness="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <StackPanel Margin="15 0 0 0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="5 0 0 0"
                        FontFamily="{StaticResource PoppinsSemiBold}"
                        FontSize="26"
                        Foreground="White"
                        Text="Doc:" />
                    <TextBlock
                        Margin="11 0 0 0"
                        FontFamily="{StaticResource PoppinsRegular}"
                        FontSize="26"
                        Foreground="White"
                        Text="Factura Recibo nº 25" />
                </StackPanel>
                <StackPanel Margin="15 0 0 0"
                    Grid.Row="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="5 0 0 0"
                        FontFamily="{StaticResource PoppinsSemiBold}"
                        FontSize="26"
                        Foreground="White"
                        Text="Série:" />
                    <TextBlock Margin="5 0 0 0" FontFamily="{StaticResource PoppinsRegular}"
                        FontSize="26"
                        Foreground="White"
                        Text="2019" />
                </StackPanel>
            </Grid>
        </Border>
        <StackPanel
            Grid.Row="0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Orientation="Horizontal" Grid.Column="1" Margin="0,13,11,13" Height="54" Width="320">
            <TextBlock VerticalAlignment="Center"
                Margin="5 0 0 0"
                FontFamily="{StaticResource PoppinsSemiBold}"
                FontSize="{StaticResource FontSizeNumberDashboard}"
                Foreground="White"
                Text="Total:" />
            <TextBlock
                Margin="5 0 0 0"
                VerticalAlignment="Center"
                FontFamily="{StaticResource PoppinsRegular}"
                FontSize="36"
                Foreground="White">
                <Span Foreground="White">
                    <Run Text="2.398.545,00" />
                </Span>
            </TextBlock>
        </StackPanel>
        <StackPanel Margin="10 0 0 0"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Orientation="Horizontal">
            <TextBox
                x:Name="txt_codigo_produto"
                Width="165"
                FontSize="13"
                mah:TextBoxHelper.ButtonCommand="{Binding TextBoxButtonCmd, Mode=OneWay}"
                materialDesign:HintAssist.Hint="Cod. Barras Produto"
                MaxLength="20"
                TextAlignment="Center" Margin="0,0,0,5" KeyDown="txt_codigo_produto_KeyDown" TextChanged="txt_codigo_produto_TextChanged" />
            <Button Name="btn_consultarProduto" Click="btn_consultarProduto_Click"
                Width="33" Height="33"
                Background="{StaticResource DefaultBackground}"
                BorderThickness="0"
                Cursor="Hand"
                Foreground="{StaticResource ResourceKey=GrayColor1}"
                Padding="0"
                ToolTip="Pesquisar Produto" Margin="10 0 ">
                <materialDesign:PackIcon Kind="Magnify" Width="31" Height="25" HorizontalAlignment="Center"></materialDesign:PackIcon>
            </Button>
            <TextBox 
                x:Name="txt_descricao_produto_servico"
                Width="297"
                Margin="5,10,0,5"
                FontSize="13"
                IsReadOnly="True"
                materialDesign:HintAssist.Hint="Descrição" />
            <xctk:DecimalUpDown
                x:Name="txt_QuantProduto"
                Width="122"
                Margin="10,5,0,5"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Top"
                BorderBrush="#6A6A6D"
                BorderThickness=" 0 0 0 1"
                CultureInfo="pt-AO"
                FontFamily="{StaticResource PoppinsRegular}"
                FontSize="24"
                Increment="1"
                Minimum="1"
                Padding="5,0,0,0"
                Style="{DynamicResource DecimalUpDownStyle1}"
                Text="1"
                TextAlignment="Left"
                ToolTip="Digite a quantidade" />
            <StackPanel Margin="25,4,15,6" Orientation="Horizontal">
                <Button Name="btnAddProduto" Margin="0 0 15 0" Click="btnAddProduto_Click"
                    Width="33" Height="33"
                    Background="{StaticResource SucessColor}"
                    BorderThickness="0"
                    Cursor="Hand" 
                    Foreground="{StaticResource ResourceKey=GrayColor1}"
                    Padding="0"
                    ToolTip="Adicionar Produto" >
                    <materialDesign:PackIcon Foreground="White" Kind="Plus" Width="31" Height="25" HorizontalAlignment="Center"/>
                </Button>
                <Button Name="btnRemoverProduto" Click="btnRemoverProduto_Click"
                    Width="33" Height="33"
                    Background="{StaticResource DangerColor}"
                    BorderThickness="0"
                    Cursor="Hand"
                    Foreground="{StaticResource ResourceKey=GrayColor1}"
                    Padding="0"
                    ToolTip="Remover Produto" >
                    <materialDesign:PackIcon Foreground="White" Kind="Trash" Width="31" Height="25" HorizontalAlignment="Center"/>
                </Button>
            </StackPanel>
        </StackPanel>
        <materialDesign:Card
            Grid.Row="2"
            Height="500"
            Margin="10,0,8,0"
            Background="White">
            <DataGrid
                x:Name="datagrid_venda" Background="White"
                Margin="0,0,0,10"
                AlternatingRowBackground="#F3F3F3"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                EnableColumnVirtualization="True"
                FontSize="14">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding CodigoBarra}"
                        FontSize="14"
                        Foreground="Black"
                        Header="Cod. Barras"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="250"
                        Binding="{Binding Descricao}"
                        FontSize="14"
                        Foreground="Black"
                        Header="Descrição"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding Lote}"
                        FontSize="14"
                        Foreground="Black"
                        Header="Lote"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding Validade}"
                        FontSize="14"
                        Foreground="Black"
                        Header="Validade"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding Unidade}"
                        FontSize="14"
                        Foreground="Black"
                        Header="UN"
                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn
                        Width="Auto" 
                        CellStyle="{StaticResource CenterCellStyle}"
                        Header="Quant.">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:DecimalUpDown
                                    Value="{Binding Quant,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Maximum="99999999999"
                                    x:Name="txt_valor_movimento"
                                    Margin="10 0 0 1"
                                    HorizontalContentAlignment="Left"
                                    VerticalContentAlignment="Top"
                                    BorderBrush="#6A6A6D"
                                    BorderThickness=" 0 0 0 1"
                                    CultureInfo="pt-AO"
                                    FontFamily="{StaticResource PoppinsRegular}"
                                    FontSize="24"
                                    Increment="1"
                                    Minimum="1"
                                    Padding="5,0,0,0"
                                    Style="{DynamicResource DecimalUpDownStyle1}"
                                    Text="1"
                                    TextAlignment="Left"
                                    ToolTip="Digite a quantidade" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="Auto" Header="Preço Unit.">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding PrecoUnit,Converter={StaticResource dinheiroConverter}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="Auto" Header="Valor Total">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding ValorTotal,Converter={StaticResource dinheiroConverter}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </materialDesign:Card>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="1" Margin="0,0,0,0" Grid.Row="1" Grid.RowSpan="2" >
            <StackPanel Orientation="Vertical"  >
                <materialDesign:Card
                    Height="95"
                    Margin="0,10,0,0" Width="300">
                    <StackPanel
                        Margin="10 10 20 0"
                        Orientation="Vertical">
                        <Label FontFamily="{StaticResource ResourceKey=PoppinsMedium}"
                            Margin="66,0,93,0"
                            HorizontalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            Content="Acção"
                            FontSize="{StaticResource FontSizeNormal}" Width="230" />
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button x:Name="btn_novo" Margin="10" FontFamily="Poppins" Background="{StaticResource BlueColor}" BorderThickness="0" Foreground="White"  Width="100" Height="33" FontSize="16" Click="btn_novo_Click">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <materialDesign:PackIcon
                            Width="20"
                            Height="18"
                            Margin="0 0 5 0"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Kind="Plus" />
                                    <TextBlock VerticalAlignment="Center"
                            FontFamily="{StaticResource PoppinsRegular}"
                            FontSize="{StaticResource FontSizeNormal}"
                            Foreground="White"
                            Text="Novo" />
                                </StackPanel>
                            </Button>
                            <Button Padding="0" x:Name="btn_salvar"  FontFamily="Poppins" Background="{StaticResource SucessColor}" BorderThickness="0" Foreground="White" Width="104" Height="33" FontSize="16" Click="btn_salvar_Click">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <materialDesign:PackIcon
                            Width="20"
                            Height="18"
                            Margin="0 0 5 0"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Kind="ContentSave" />
                                    <TextBlock VerticalAlignment="Center"
                            FontFamily="{StaticResource PoppinsRegular}"
                            FontSize="{StaticResource FontSizeNormal}"
                            Foreground="White"
                            Text="Salvar" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </materialDesign:Card>
                <materialDesign:Card
                    Height="280"  Width="300"
                    Margin="0,5,0,5">
                    <StackPanel
                        Margin="10 5 20 0"
                        Orientation="Vertical">
                        <StackPanel Margin="19,10,19,0" Orientation="Vertical">
                            <Label FontFamily="{StaticResource ResourceKey=PoppinsMedium}"
                                Margin="10,0,15,0"
                                HorizontalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Content="Documento de Facturação"
                                FontSize="{StaticResource FontSizeNormal}" Width="230" />
                            <ComboBox x:Name="cmb_documento_facturacao" SelectedIndex="0" materialDesign:HintAssist.Hint="Seleccione" ToolTip="Documento de facturação"
                                Margin="0,10,27,0"
                                VerticalContentAlignment="Center"
                                FontSize="12"
                                IsEnabled="True"         >
                                
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="30 10 40 0">
                            <StackPanel
                                Width="112"
                                Height="79"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                Orientation="Vertical">
                                <StackPanel
                                    Orientation="Vertical">
                                    <Label
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Content="Data Venda"
                                        FontFamily="{StaticResource PoppinsSemiBold}"
                                        FontSize="{StaticResource FontSizeNormal}" />
                                    <DatePicker ToolTip="Data da venda"
                                        x:Name="data_facturacao"                          
                                        HorizontalAlignment="Center"
                                        FontSize="14"
                                        Language="PT-pt"
                                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Height="40" Margin="0,0,0,0" Width="110"  />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel                    
                                Height="79"
                                Margin="20,0,0,0" 
                                HorizontalAlignment="Right"
                                Orientation="Vertical">
                                <StackPanel Margin="0 0 0 0"
                                    Orientation="Vertical">
                                    <Label
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Content="Moeda"
                                        FontFamily="{StaticResource PoppinsSemiBold}"
                                        FontSize="{StaticResource FontSizeNormal}" />
                                    <Label Content="AKZ" FontSize="16" ToolTip="Moeda" FontFamily="{StaticResource PoppinsSemiBold}" Margin="0 10 0 0" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="19,20,19,0" Orientation="Vertical">
                            <Label FontFamily="{StaticResource ResourceKey=PoppinsMedium}"
                                Margin="10,0,15,0"
                                HorizontalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Content="Condições de Pagamento"
                                FontSize="{StaticResource FontSizeNormal}"  />
                            <ComboBox SelectedIndex="0" materialDesign:HintAssist.Hint="Seleccione" ToolTip="Condições de pagamento"
                                x:Name="cmb_condicoes_pagamento"
                                Margin="0 10 0 0"
                                VerticalContentAlignment="Center"
                                FontSize="12"
                                IsEnabled="True"         >
                               
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                </materialDesign:Card>
                <materialDesign:Card
                    Height="130"  Width="300"
                    Margin="0,5,0,0">
                    <StackPanel
                        Margin="10 5 20 0"
                        Orientation="Vertical">
                        <StackPanel Margin="19,10,0,0" Orientation="Vertical">
                            <Label FontFamily="{StaticResource ResourceKey=PoppinsMedium}"
                                Margin="10,0,15,0"
                                HorizontalAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Content="Informação do Cliente"
                                FontSize="{StaticResource FontSizeNormal}" />
                            <CheckBox FontSize="{StaticResource FontSizeNormal}" x:Name="checkBox_Cliente" Content="Diversos" Checked="checkBox_Cliente_Checked" Unchecked="checkBox_Cliente_Unchecked"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBox x:Name="txt_cliente" 
                                    Width="198"
                                    Margin="5,10,0,2"
                                    FontSize="14"
                                    IsReadOnly="True"
                                    materialDesign:HintAssist.Hint="Clientes Diversos" KeyDown="txt_cliente_KeyDown" />
                                <Button ToolTip="Pesquisar Cliente" Name="btnConsultarCliente" Click="btnConsultarCliente_Click"
                                    Width="33" Height="33" VerticalAlignment="Bottom"
                                    Background="{StaticResource DefaultBackground}"
                                    BorderThickness="0"
                                    Cursor="Hand"
                                    Foreground="{StaticResource ResourceKey=GrayColor1}"
                                    Padding="0"
                                     Margin="10,0,10,2" >
                                    <materialDesign:PackIcon Kind="Magnify" Width="31" Height="25" HorizontalAlignment="Center"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </materialDesign:Card>
            </StackPanel>
        </ScrollViewer>
    </Grid>

</UserControl>
